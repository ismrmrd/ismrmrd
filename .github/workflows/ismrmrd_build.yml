name: CMake

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  release:
    types:
      - created

env:
  BUILD_TYPE: Release
  REGISTRY: ghcr.io

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install doxygen git-core graphviz libboost-all-dev libfftw3-dev libhdf5-serial-dev libxml2-utils libpugixml-dev socat

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        cmake --build . --config $BUILD_TYPE
        cmake --build . --target doc --config $BUILD_TYPE
    - name: Test XML
      working-directory: ${{github.workspace}}/schema
      shell: bash
      run: for xml_file in *.xml; do xmllint --schema ismrmrd.xsd "$xml_file" --noout; done

    - name: Test
      working-directory: ${{github.workspace}}/build/tests
      shell: bash
      run: ./test_ismrmrd

    - name: Build and test docker images
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        ./docker/build-images.sh
        ./docker/test-docker-images.sh

    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push images
      if: ${{ github.event_name == 'release' }}
      working-directory: ${{github.workspace}}
      shell: bash
      run: |
        ./docker/build-images.sh --tag "${GITHUB_REF##*/}" --push

  build-static:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Build docker image
      run: |-
        docker build -f Dockerfile.build-static -t ismrmrd_static .

    - name: Test static binaries
      run: |-
        set -euo pipefail
        test_command="set -euo pipefail \
              && export PATH=$PATH:/opt/package/bin \
              && test -f /opt/package/lib/libismrmrd.a \
              && ! test -e /opt/package/lib/libismrmrd.so \
              && ismrmrd_generate_cartesian_shepp_logan -o testdata.h5 \
              && ismrmrd_hdf5_to_stream -i testdata.h5 --use-stdout \
                | ismrmrd_stream_recon_cartesian_2d --use-stdin --use-stdout \
                | ismrmrd_stream_to_hdf5 --use-stdin -o result.h5"
        docker run ismrmrd_static /bin/bash -c "$test_command"
